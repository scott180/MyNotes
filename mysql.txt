马士兵mysql教程笔记-x

password：root

--  显示数据库
show databases;

-- 使用这个数据库:与oracle的用户类似
 use mydata;

--  显示表
show tables;

-- 创建数据库
 create database mydata;

--  描述表
desc dept;

-- mysql的增删改查与oracle基本一致

--  插入数据
insert into dept values(10,'a','a');
--  提交数据
commit;

mysql> insert into dept values(21,'b','bb');
Query OK, 1 row affected (0.06 sec)

mysql> insert into dept values(30,'c','c');
Query OK, 1 row affected (0.05 sec)

mysql> insert into dept values(40,'d','d');
Query OK, 1 row affected (0.06 sec)

mysql> insert into dept values(50,'e','e');
Query OK, 1 row affected (0.08 sec)

mysql> commit;
Query OK, 0 rows affected (0.00 sec)


alter table article convert to charset gbk;
show create table table_name;
执行sql脚本语句 \. c:\\mysql_script\\mydata.sql


create table if not exists t like logs;
select * from user where concat(',',name,',') like '%,admin,%';
select * from logs_2016_11 union select * from logs_2016_12 \G;

mysql> select table_name from information_schema.tables where table_schema='survey1' and table_name
like 'logs_%' and table_name<='logs_2016_12' order by table_name limit 0,3;

-- 创建表
create table dept
(
deptno int primary key,
dname varchar(14),
loc varchar(13)
);

create table emp
(
empno int primary key,
ename varchar(10),
job varchar(10),
mrg int,
hiredate datetime,
sal double,
comm double,
deptno int,
foreign key(deptno) references dept(deptno)
);

添加外键
alter table tb_OrderOut add constraint tb_OrderOut_goodsid_fk Foreign Key (goodsid)
References tb_Product (goodsid);
alter table t2 add constraint tb_foreignkey foreign  key(id) references test(id);

-- 删除表
drop table emp;
或者 DROP TABLE IF EXISTS `A`;


-- 创建数据库  create database dt1;
-- 删除数据库  drop database dt1;

-- 上下键，显示上次的命令

数据库的区别：数据类型，分页程序
-- mysql的分页程序： 倒叙从第三行后面的两个
 select * from dept order by deptno desc limit 3,2;


--  mysql的注释
mysql 服务器支持 # 到该行结束、-- 到该行结束 以及 /* 行中间或多个行 */ 的注释方格： 
mysql> SELECT 1+1;     # 这个注释直到该行结束
mysql> SELECT 1+1;     -- 这个注释直到该行结束
mysql> SELECT 1 /* 这是一个在行中间的注释 */ + 1;
mysql> SELECT 1+
/*
这是一个
多行注释的形式
*/
1;
  注意 -- (双长划) 注释风格要求在两个长划后至少有一个空格！ 
  尽管服务器理解刚才描述的注释句法，但 MySQL 客户端的语法分析在 /* ... */ 注释方式上还有所限止： 
  单引号和双引号被用来标志一个被引用字符串的开始，即使是在一个注释中。如果注释中的引号没有另一个引号与之配对，那和语法分析程序就不会认为注释结束。如果你以交互式运行 mysql，你会产生困惑，因为提示符从 mysql> 变为 '> 或 ">。


查看当前数据库
1. 通过函数database()实现
    mysql> SELECT database();
2. 通过show tables实现
    mysql> show tables;
    注：注意查看列头形式, 格式为：Tables_in_[db_name]
3. 通过status实现
    mysql> status;
    注：注意结果中的"Current database"信息


-- mysql的自动递增auto_increment（类似oracle的序列 sequence）
create table article(
id int primary key auto_increment,
title varchar(255)
);


mysql> create table org(id int primary key,name varchar(30),parentid int,foreign key(parentid) references org(id));

insert into article values (null,'a');
insert into artcle values('b');
mysql> select * from article;
+----+-------+
| id | title |
+----+-------+
|  1 | a     |
|  2 | b     |
+----+-------+

mysql> desc article;
+-------+--------------+------+-----+---------+----------------+
| Field | Type         | Null | Key | Default | Extra          |
+-------+--------------+------+-----+---------+----------------+
| id    | int(11)      | NO   | PRI | NULL    | auto_increment |
| title | varchar(255) | YES  |     | NULL    |                |
+-------+--------------+------+-----+---------+----------------+



-- 当前日期
select now();
+---------------------+
| now()               |
+---------------------+
| 2016-05-30 20:32:40 |
+---------------------+

-- 日期格式转换
select date_format(now(),'%Y-%m-%d %H:%i:%s');
select date_format(now(),'%y-%m-%d %h:%i:%s');

--字符串转换日期
 insert into emp(empno,hiredate) values(1223,'1999-9-9');
 insert into emp(empno,hiredate) values(1224,'2111-11-12 20:34:44');

-- 删除表中所有行
delete from emp;


修改表名：  alter table t_book rename to bbb; 
添加列：    alter table 表名 add column 列名 varchar(30); 
删除列：    alter table 表名 drop column 列名; 
修改列名：  alter table bbb change nnnnn hh int; 
修改列属性：alter table t_book modify name varchar(22); 





删除一个已经确定存在的数据库
mysql> drop database drop_database;
Query OK, 0 rows affected (0.00 sec)

删除一个不确定存在的数据库
mysql> drop database drop_database;
ERROR 1008 (HY000): Can't drop database 'drop_database'; database doesn't exist
//发生错误，不能删除'drop_database'数据库，该数据库不存在。

mysql> drop database if exists drop_database;
Query OK, 0 rows affected, 1 warning (0.00 sec)//产生一个警告说明此数据库不存在
mysql> create database drop_database;
Query OK, 1 row affected (0.00 sec)
mysql> drop database if exists drop_database;//if exists 判断数据库是否存在，不存在也不产生错误
Query OK, 0 rows affected (0.00 sec) 


内连接
mysql> select orders.*,user.username,user.sex,user.birthday from orders,user where orders.user_id=user.id;

外连接
mysql> select orders.*,user.username,user.sex,user.birthday from orders join user on(orders.user_id=user.id);
左外连接
mysql> select orders.*,user.username,user.sex,user.birthday from orders left join user on(orders.user_id=user.id);
右外连接
mysql> select orders.*,user.username,user.sex,user.birthday from orders right join user on(orders.use
r_id=user.id);

1.显示MYSQL的版本
mysql> select version(); 
+-----------------------+ 
| version() | 
+-----------------------+ 
| 6.0.4-alpha-community | 
+-----------------------+ 
1 row in set (0.02 sec) 

2. 显示当前时间
mysql> select now(); 
+---------------------+ 
| now() | 
+---------------------+ 
| 2009-09-15 22:35:32 | 
+---------------------+ 
1 row in set (0.04 sec) 

3. 显示年月日
SELECT DAYOFMONTH(CURRENT_DATE); 
+--------------------------+ 
| DAYOFMONTH(CURRENT_DATE) | 
+--------------------------+ 
| 15 | 
+--------------------------+ 
1 row in set (0.01 sec) 

SELECT MONTH(CURRENT_DATE); 
+---------------------+ 
| MONTH(CURRENT_DATE) | 
+---------------------+ 
| 9 | 
+---------------------+ 
1 row in set (0.00 sec) 

SELECT YEAR(CURRENT_DATE); 
+--------------------+ 
| YEAR(CURRENT_DATE) | 
+--------------------+ 
| 2009 | 
+--------------------+ 
1 row in set (0.00 sec) 

4. 显示字符串
mysql> SELECT "welecome to my blog!"; 
+----------------------+ 
| welecome to my blog! | 
+----------------------+ 
| welecome to my blog! | 
+----------------------+ 
1 row in set (0.00 sec) 

5. 当计算器用
select ((4 * 4) / 10 ) + 25; 
+----------------------+ 
| ((4 * 4) / 10 ) + 25 | 
+----------------------+ 
| 26.60 | 
+----------------------+ 
1 row in set (0.00 sec) 


-- dos命令进入数据
1.进入安装mysql的目录
cd C:\Program Files\MySQL\MySQL Server 5.7\bin
2.输入用户名、密码
mysql -uroot -proot



创建数据表
命令：create table <表名> ( <字段名1> <类型1> [,..<字段名n> <类型n>]);  
mysql> create table MyClass(
> id int(4) not null primary key auto_increment,
> name char(20) not null,
> sex int(4) not null default '0',
> degree double(16,2));


使用MySQL数据库desc 表名时，我们看到Key那一栏，可能会有4种值，即' '，'PRI'，'UNI'，'MUL'。
1. 如果Key是空的, 那么该列值的可以重复, 表示该列没有索引, 或者是一个非唯一的复合索引的非前导列；
2. 如果Key是PRI, 那么该列是主键的组成部分；
3. 如果Key是UNI, 那么该列是一个唯一值索引的第一列(前导列),并别不能含有空值(NULL)；
4. 如果Key是MUL, 那么该列的值可以重复, 该列是一个非唯一索引的前导列(第一列)或者是一个唯一性索引的组成部分但是可以含有空值NULL。

如果对于一个列的定义，同时满足上述4种情况的多种，比如一个列既是PRI,又是UNI，那么"desc 表名"的时候，显示的Key值按照优先级来显示 PRI->UNI->MUL。那么此时，显示PRI。

一个唯一性索引列可以显示为PRI,并且该列不能含有空值，同时该表没有主键。
一个唯一性索引列可以显示为MUL, 如果多列构成了一个唯一性复合索引，因为虽然索引的多列组合是唯一的，比如ID+NAME是唯一的，但是没一个单独的列依然可以有重复的值，只要ID+NAME是唯一的即可。 
5.3 删除数据表
命令：drop table <表名>
例如：删除表名为 MyClass 的表
mysql> drop table MyClass;
DROP TABLE用于取消一个或多个表。您必须有每个表的DROP权限。所有的表数据和表定义会被取消，所以使用本语句要小心！
注意：对于一个带分区的表，DROP TABLE会永久性地取消表定义，取消各分区，并取消储存在这些分区中的所有数据。DROP TABLE还会取消与被取消的表有关联的分区定义（.par）文件。
对与不存在的表，使用IF EXISTS用于防止错误发生。当使用IF EXISTS时，对于每个不存在的表，会生成一个NOTE。
RESTRICT和CASCADE可以使分区更容易。目前，RESTRICT和CASCADE不起作用。 

5.4 表插入数据
命令：insert into <表名> [( <字段名1>[,..<字段名n > ])] values ( 值1 )[, ( 值n )]

例如：往表 MyClass中插入二条记录, 这二条记录表示：编号为1的名为Tom的成绩为96.45, 编号为2 的名为Joan 的成绩为82.99， 编号为3 的名为Wang 的成绩为96.5。
mysql> insert into MyClass values(1,'Tom',96.45),(2,'Joan',82.99), (2,'Wang', 96.59);

注意：insert into每次只能向表中插入一条记录。 

5.5 查询表中的数据
1)、查询所有行
命令： select <字段1，字段2，...> from < 表名 > where < 表达式 >
例如：查看表 MyClass 中所有数据
mysql> select * from MyClass;

2）、查询前几行数据
例如：查看表 MyClass 中前2行数据
mysql> select * from MyClass order by id limit 0,2;

select一般配合where使用，以查询更精确更复杂的数据。 

5.6 删除表中数据
命令：delete from 表名 where 表达式

例如：删除表 MyClass中编号为1 的记录
mysql> delete from MyClass where id=1;

5.7 修改表中数据

语法：update 表名 set 字段=新值,… where 条件
mysql> update MyClass set name='Mary' where id=1;

例子1：单表的MySQL UPDATE语句：
UPDATE [LOW_PRIORITY] [IGNORE] tbl_name SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition] [ORDER BY ...] [LIMIT row_count]

例子2：多表的UPDATE语句：
UPDATE [LOW_PRIORITY] [IGNORE] table_references SET col_name1=expr1 [, col_name2=expr2 ...] [WHERE where_definition]

UPDATE语法可以用新值更新原有表行中的各列。SET子句指示要修改哪些列和要给予哪些值。WHERE子句指定应更新哪些行。如果没有WHERE子句，则更新所有的行。如果指定了ORDER BY子句，则按照被指定的顺序对行进行更新。LIMIT子句用于给定一个限值，限制可以被更新的行的数目。 

5.8 增加字段
命令：alter table 表名 add字段 类型 其他;
例如：在表MyClass中添加了一个字段passtest，类型为int(4)，默认值为0
mysql> alter table MyClass add passtest int(4) default '0'

加索引
mysql> alter table 表名 add index 索引名 (字段名1[，字段名2 …]);
例子： mysql> alter table employee add index emp_name (name);

加主关键字的索引
mysql> alter table 表名 add primary key (字段名);
例子： mysql> alter table employee add primary key(id);

加唯一限制条件的索引
mysql> alter table 表名 add unique 索引名 (字段名);
例子： mysql> alter table employee add unique emp_name2(cardnumber);

删除某个索引
mysql> alter table 表名 drop index 索引名;
例子： mysql>alter table employee drop index emp_name;

增加字段：
mysql> ALTER TABLE table_name ADD field_name field_type;

修改原字段名称及类型：
mysql> ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;

删除字段：
MySQL ALTER TABLE table_name DROP field_name; 
5.9 修改表名
命令：rename table 原表名 to 新表名;

例如：在表MyClass名字更改为YouClass
mysql> rename table MyClass to YouClass;

当你执行 RENAME 时，你不能有任何锁定的表或活动的事务。你同样也必须有对原初表的 ALTER 和 DROP 权限，以及对新表的 CREATE 和 INSERT 权限。

如果在多表更名中，MySQL 遭遇到任何错误，它将对所有被更名的表进行倒退更名，将每件事物退回到最初状态。

RENAME TABLE 在 MySQL 3.23.23 中被加入。 


6、备份数据库
命令在DOS的[url=file://\\mysql\\bin]\\mysql\\bin[/url]目录下执行

1.导出整个数据库
导出文件默认是存在mysql\bin目录下
mysqldump -u 用户名 -p 数据库名 > 导出的文件名
mysqldump -u user_name -p123456 database_name > outfile_name.sql

2.导出一个表
mysqldump -u 用户名 -p 数据库名 表名> 导出的文件名
mysqldump -u user_name -p database_name table_name > outfile_name.sql

3.导出一个数据库结构
mysqldump -u user_name -p -d –add-drop-table database_name > outfile_name.sql
-d 没有数据 –add-drop-table 在每个create语句之前增加一个drop table

4.带语言参数导出
mysqldump -uroot -p –default-character-set=latin1 –set-charset=gbk –skip-opt database_name > outfile_name.sql

例如，将aaa库备份到文件back_aaa中：
　　[root@test1 root]# cd　/home/data/mysql
　　[root@test1 mysql]# mysqldump -u root -p --opt aaa > back_aaa

